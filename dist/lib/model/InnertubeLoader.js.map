{"version":3,"file":"InnertubeLoader.js","sourceRoot":"","sources":["../../../src/lib/model/InnertubeLoader.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,yEAAqC;AACrC,2DAA+F;AAE/F,MAAqB,eAAe;IAIlC,MAAM,CAAC,KAAK,CAAC,WAAW;QACtB,IAAI,CAAC,uBAAA,IAAI,4CAAiB,EAAE,CAAC;YAC3B,yBAAG,CAAC,KAAK,CAAC,MAAM,EAAE,yBAAG,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC,CAAC;YACxD,uBAAA,IAAI,MAAoB,qCAAgB,CAAC,kBAAkB,CAAC;gBAC1D,OAAO,EAAE;oBACP,MAAM,EAAE,yBAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,SAAS;oBACjD,mBAAmB,EAAE,yBAAG,CAAC,cAAc,CAAC,qBAAqB,CAAC;iBAC/D;gBACD,MAAM,EAAE;oBACN,MAAM,EAAE,yBAAG,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACpC,QAAQ,EAAE,yBAAG,CAAC,cAAc,CAAC,UAAU,CAAC;iBACzC;gBACD,MAAM,EAAE;oBACN,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,yBAAG,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;oBACxD,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,yBAAG,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;oBACxD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,yBAAG,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,cAAc,GAAG,EAAE,CAAC;iBAC3D;aACF,CAAC,wCAAA,CAAC;QACL,CAAC;QACD,OAAO,uBAAA,IAAI,4CAAiB,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,UAAkB;QAC7C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1C,OAAO,MAAM,QAAQ,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IACpD,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,KAAK;QAChB,IAAI,uBAAA,IAAI,4CAAiB,EAAE,CAAC;YAC1B,MAAM,QAAQ,GAAG,MAAM,uBAAA,IAAI,4CAAiB,CAAC;YAC7C,MAAM,QAAQ,CAAC,OAAO,EAAE,CAAC;YACzB,uBAAA,IAAI,MAAoB,IAAI,wCAAA,CAAC;QAC/B,CAAC;IACH,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,eAAe;QAC1B,MAAM,MAAM,GAAG,yBAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,yBAAG,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,uBAAA,IAAI,4CAAiB,EAAE,CAAC;YAC1B,MAAM,QAAQ,GAAG,MAAM,uBAAA,IAAI,4CAAiB,CAAC;YAC7C,QAAQ,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;;;AA5CM,4CAAqD,IAAI,EAAzC,CAA0C;kBAF9C,eAAe","sourcesContent":["import yt2 from '../YouTube2Context';\nimport { InnertubeFactory, type InnertubeWrapper, type PotFnResult } from 'volumio-yt-support';\n\nexport default class InnertubeLoader {\n\n  static #instancePromise: Promise<InnertubeWrapper> | null = null;\n\n  static async getInstance(): Promise<InnertubeWrapper> {\n    if (!this.#instancePromise) {\n      yt2.toast('info', yt2.getI18n('YOUTUBE2_PREPPING_API'));\n      this.#instancePromise = InnertubeFactory.getWrappedInstance({\n        account: {\n          cookie: yt2.getConfigValue('cookie') || undefined,\n          activeChannelHandle: yt2.getConfigValue('activeChannelHandle')\n        },\n        locale: {\n          region: yt2.getConfigValue('region'),\n          language: yt2.getConfigValue('language')\n        },\n        logger: {\n          info: (msg) => yt2.getLogger().info(`[youtube2] ${msg}`),\n          warn: (msg) => yt2.getLogger().warn(`[youtube2] ${msg}`),\n          error: (msg) => yt2.getLogger().error(`[youtube2] ${msg}`),\n        }\n      });\n    }\n    return this.#instancePromise;\n  }\n\n  static async generatePoToken(identifier: string): Promise<PotFnResult> {\n    const instance = await this.getInstance();\n    return await instance.generatePoToken(identifier);\n  }\n\n  static async reset() {\n    if (this.#instancePromise) {\n      const instance = await this.#instancePromise;\n      await instance.dispose();\n      this.#instancePromise = null;\n    }\n  }\n\n  static async applyI18nConfig() {\n    const region = yt2.getConfigValue('region');\n    const language = yt2.getConfigValue('language');\n    if (this.#instancePromise) {\n      const instance = await this.#instancePromise;\n      instance.setLocale({ region, language });\n    }\n  }\n}\n"]}