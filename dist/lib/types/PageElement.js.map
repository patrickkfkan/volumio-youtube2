{"version":3,"file":"PageElement.js","sourceRoot":"","sources":["../../../src/lib/types/PageElement.ts"],"names":[],"mappings":"","sourcesContent":["import { ContentItem } from '.';\nimport Endpoint, { EndpointType } from './Endpoint';\n\nexport interface Header {\n  type: 'feed' | 'channel' | 'playlist' | 'search';\n  title: string;\n  subtitles?: string[];\n  description?: string;\n  thumbnail?: string;\n  endpoint?: Endpoint;\n}\n\nexport interface PlaylistHeader extends Header {\n  type: 'playlist';\n  author?: ContentItem.Author;\n  shufflePlay?: ContentItem.EndpointLink;\n}\n\nexport type SectionItem = ContentItem.Channel | ContentItem.EndpointLink | ContentItem.GuideEntry | ContentItem.Playlist | ContentItem.Video | Section;\n\nexport interface Section {\n  type: 'section';\n  title?: string;\n  subtitle?: string;\n  items: SectionItem[];\n  filters?: Option[];\n  continuation?: Continuation<EndpointType.BrowseContinuation | EndpointType.SearchContinuation>;\n  menus?: Option[];\n  buttons?: Button[];\n  endpoint?: Endpoint;\n}\n\nexport interface Option {\n  type: 'option';\n  title?: string,\n  optionValues: {\n    text: string;\n    endpoint: Endpoint | null;\n    selected: boolean\n  }[];\n}\n\nexport interface Continuation<T extends EndpointType.BrowseContinuation | EndpointType.SearchContinuation | EndpointType.WatchContinuation> {\n  type: 'continuation';\n  text?: string;\n  endpoint: Endpoint & {type: T};\n}\n\nexport interface Button {\n  type: 'button';\n  text: string;\n  endpoint: Endpoint;\n}\n\nexport interface Tab {\n  type: 'tab';\n  text: string;\n  endpoint: Endpoint;\n  selected: boolean;\n}\n"]}