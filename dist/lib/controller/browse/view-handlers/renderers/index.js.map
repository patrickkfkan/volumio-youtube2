{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderers/index.ts"],"names":[],"mappings":";;;;;;AACA,wEAAgD;AAChD,kFAA0D;AAC1D,sEAA8C;AAC9C,gFAAwD;AACxD,0EAAkD;AAClD,oEAA4C;AAE5C,IAAY,YAOX;AAPD,WAAY,YAAY;IACtB,mCAAmB,CAAA;IACnB,6CAA6B,CAAA;IAC7B,iCAAiB,CAAA;IACjB,2CAA2B,CAAA;IAC3B,qCAAqB,CAAA;IACrB,+BAAe,CAAA;AACjB,CAAC,EAPW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAOvB;AAED,MAAM,sBAAsB,GAAqB;IAC/C,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,yBAAe;IACvC,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,8BAAoB;IACjD,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,wBAAc;IACrC,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,6BAAmB;IAC/C,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,0BAAgB;IACzC,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,uBAAa;CACpC,CAAC;AAEF,MAAqB,QAAQ;IAQ3B,MAAM,CAAC,WAAW,CAAC,IAAkB,EAAE,GAAW,EAAE,WAAiB,EAAE,aAAqB;QAC1F,IAAI,sBAAsB,CAAC,IAAI,CAAC,EAAE;YAChC,OAAO,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;SAC1E;QACD,MAAM,KAAK,CAAC,+BAA+B,YAAY,EAAE,CAAC,CAAC;IAC7D,CAAC;CACF;AAdD,2BAcC","sourcesContent":["import View from '../View';\nimport ChannelRenderer from './ChannelRenderer';\nimport EndpointLinkRenderer from './EndpointLinkRenderer';\nimport OptionRenderer from './OptionRenderer';\nimport OptionValueRenderer from './OptionValueRenderer';\nimport PlaylistRenderer from './PlaylistRenderer';\nimport VideoRenderer from './VideoRenderer';\n\nexport enum RendererType {\n  Channel = 'Channel',\n  EndpointLink = 'EndpointLink',\n  Option = 'Option',\n  OptionValue = 'OptionValue',\n  Playlist = 'Playlist',\n  Video = 'Video'\n}\n\nconst RENDERER_TYPE_TO_CLASS: Record<any, any> = {\n  [RendererType.Channel]: ChannelRenderer,\n  [RendererType.EndpointLink]: EndpointLinkRenderer,\n  [RendererType.Option]: OptionRenderer,\n  [RendererType.OptionValue]: OptionValueRenderer,\n  [RendererType.Playlist]: PlaylistRenderer,\n  [RendererType.Video]: VideoRenderer\n};\n\nexport default class Renderer {\n\n  static getInstance(type: RendererType.Channel, uri: string, currentView: View, previousViews: View[]): ChannelRenderer;\n  static getInstance(type: RendererType.EndpointLink, uri: string, currentView: View, previousViews: View[]): EndpointLinkRenderer;\n  static getInstance(type: RendererType.Option, uri: string, currentView: View, previousViews: View[]): OptionRenderer;\n  static getInstance(type: RendererType.OptionValue, uri: string, currentView: View, previousViews: View[]): OptionValueRenderer;\n  static getInstance(type: RendererType.Playlist, uri: string, currentView: View, previousViews: View[]): PlaylistRenderer;\n  static getInstance(type: RendererType.Video, uri: string, currentView: View, previousViews: View[]): VideoRenderer;\n  static getInstance(type: RendererType, uri: string, currentView: View, previousViews: View[]) {\n    if (RENDERER_TYPE_TO_CLASS[type]) {\n      return new RENDERER_TYPE_TO_CLASS[type](uri, currentView, previousViews);\n    }\n    throw Error(`Renderer not found for type ${RendererType}`);\n  }\n}\n"]}